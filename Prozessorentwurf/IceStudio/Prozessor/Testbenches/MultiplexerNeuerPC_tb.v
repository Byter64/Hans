// Code generated by Icestudio 0.10
// Sat, 18 Mar 2023 19:02:01 GMT

// Testbench template
`include "MultiplexerNeuerPC.v"
`default_nettype none
`define DUMPSTR(x) `"x.vcd`"
`timescale 10 ns / 1 ns
`define assert(signal, value) \
        if (signal !== value) begin \
            $display("ASSERTION FAILED in %m: signal != value"); \
            $finish; \
        end

module main_tb
;
 
 // Simulation time: 100ns (10 * 10ns)
 parameter DURATION = 10;
 
 // Input/Output
 reg [31:0] RelativerPC;
 reg [31:0] AbsoluterPC;
 reg IstAbsolute;
 wire [25:0] NeuerPC;
 
 // Module instance
 main MAIN (
  .v5a59b5(RelativerPC),
  .vb6adaf(AbsoluterPC),
  .vf95e96(IstAbsolute),
  .vbda1cf(NeuerPC)
 );
 
 initial begin
  $dumpvars(0, main_tb);
 
  // TODO: initialize the registers here
  // e.g. value = 1;
  // e.g. #2 value = 0;
  RelativerPC = 0;
  AbsoluterPC = 0;
  IstAbsolute = 0;
 
  #(DURATION) $display("End of simulation");
  $finish;
 end
 
endmodule
