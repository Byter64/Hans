// Code generated by Icestudio 0.10
// Sat, 18 Mar 2023 19:01:17 GMT

// Testbench template
`include "InstruktionsDekodierer.v"
`default_nettype none
`define DUMPSTR(x) `"x.vcd`"
`timescale 10 ns / 1 ns
`define assert(signal, value) \
        if (signal !== value) begin \
            $display("ASSERTION FAILED in %m: signal != value"); \
            $finish; \
        end
module main_tb
;
 
 // Simulation time: 100ns (10 * 10ns)
 parameter DURATION = 10;
 
// Input/Output
 reg [31:0] Instruktion;
 reg DekodierSignal;
 reg Clock;
 reg Reset;
 wire [5:0] QuellReg1;
 wire [5:0] QuellReg2;
 wire [5:0] ZielReg1;
 wire [25:0] IDaten;
 wire KleinerImmediateAktiv;
 wire Gro√üerImmediateAktiv;
 wire [5:0] FunktionsCode;
 wire JALBefehl;
 wire RelativerSprung;
 wire FloatBefehl;
 wire LoadBefehl;
 wire StoreBefehl;
 wire UnbedingterSprungBefehl;
 wire BedingterSprung;
 wire AbsoluterSprung;

 // Module instance
 main MAIN (
  .vd56645(Instruktion),
  .v1d4fda(QuellReg1),
  .vcc5aff(QuellReg2),
  .v9859e3(ZielReg1),
  .vd59e62(IDaten),
  .v37f516(IAktiv),
  .v4cfcbf(FunktionsCode),
  .v9452f7(FloatBefehl),
  .veae0d5(LoadBefehl),
  .v733f38(StoreBefehl),
  .ve7b995(RelSprungBefehl),
  .vcf476d(UnbedingterSprungBefehl),
  .vc2ff47(BedingterSprung)
 );
 
 initial begin
  $dumpvars(0, main_tb);
 
  // TODO: initialize the registers here
  // e.g. value = 1;
  // e.g. #2 value = 0;
    Instruktion = 0;
      #(DURATION) $display("End of simulation");
  $finish;
 end
 
endmodule
