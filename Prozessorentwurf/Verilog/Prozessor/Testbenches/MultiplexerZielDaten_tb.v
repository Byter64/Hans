// Code generated by Icestudio 0.10
// Mon, 20 Mar 2023 15:09:35 GMT

// Testbench template
`include "MultiplexerZielDaten.v"
`default_nettype none
`define DUMPSTR(x) `"x.vcd`"
`timescale 10 ns / 1 ns
`define assert(signal, value) \
        if (signal !== value) begin \
            $display("ASSERTION FAILED in %m: signal != value"); \
            $finish; \
        end

module main_tb
;
 
 // Simulation time: 100ns (10 * 10ns)
 parameter DURATION = 10;
 
 // Input/Output
 reg [31:0] ALUErgebnis;
 reg [25:0] ErhöhterPC;
 reg [31:0] LoadErgebnis;
 reg JALBefehl;
 reg LoadBefehl;
 wire [31:0] ZielDaten;
 
 // Module instance
 main MAIN (
  .vcf12e3(ALUErgebnis),
  .vbaf620(ErhöhterPC),
  .v51b6bc(LoadErgebnis),
  .v604d67(JALBefehl),
  .va16ad8(LoadBefehl),
  .va874ad(ZielDaten)
 );
 
 initial begin
  $dumpvars(0, main_tb);
 
  // TODO: initialize the registers here
  // e.g. value = 1;
  // e.g. #2 value = 0;
  ALUErgebnis = 32'b00010010000000110000010000001100;
  ErhöhterPC = 26'b00011001001100001110010110;
  LoadErgebnis = 32'b00010010000100010000010110001001;
  
  #100 JALBefehl = 0; LoadBefehl = 0;
  #100 assert(ZielDaten, ALUErgebnis);

  #100 JALBefehl = 0; LoadBefehl = 1;
  #100 assert(ZielDaten, LoadErgebnis);
  
  #100 JALBefehl = 1; LoadBefehl = 0;
  #100 assert(ZielDaten, 26'b00000000011001001100001110010110);

  #(DURATION) $display("End of simulation");
  $finish;
 end
 
endmodule
