// Code generated by Icestudio 0.10
// Sat, 18 Mar 2023 19:02:50 GMT

// Testbench template
`include "../Bildpuffer.v"
`default_nettype none
`define DUMPSTR(x) `"x.vcd`"
`timescale 10 ns / 1 ns
`define assert(signal, value) \
        if (signal !== value) begin \
            $display("ASSERTION FAILED in %m: signal != value"); \
            $finish; \
        end

module main_tb
;
 //FUNKTIONIERT GERADE NICHT

 
 // Simulation time: 100ns (10 * 10ns)
 // Parameter f√ºr die Testbench
  // Eingangssignale
  reg clk;
  reg rst;
  reg [15:0] x;
  reg [15:0] y;
  reg [7:0] color;
  reg write;
  wire [7:0] pixel;

 // Module instance
  Bildpuffer bildpuffer (
    .clk(clk),
    .rst(rst),
    .x(x),
    .y(y),
    .color(color),
    .write(write),
    .pixel(pixel)
  );
 initial begin
    clk = 1'b0;
end

always begin
   #100 clk = ~clk; 
end
    initial begin
        $dumpvars(0, main_tb);
        rst = 1;
        #100
        rst = 0;
        #200
        x = 16'b0000000000001100;
        y = 16'b0000000000000110;
        color = 8'b00001111;
        write = 1'b1;
        $display("Start of simulation");
        #100
        if(pixel != color)
            $display("1Wert in Pixel Farbe: %d x: %d und y: %d ist ungleich Color:%d",color, x, y, color);
        #100
                
        x = 16'b0000000001101100;
        y = 16'b0000000001110110;
        color = 8'b00000111;
        #100
        if(pixel != color)
            $display("2Wert in Pixel Farbe: %d x: %d und y: %d ist ungleich Color:%d",color, x, y, color);
        #100
                
        x = 16'b0000000000001100;
        y = 16'b0000000000010110;
        color = 8'b00000011;
        #100
        if(pixel != color)
            $display("3Wert in Pixel Farbe: %d x: %d und y: %d ist ungleich Color:%d",color, x, y, color);
        #100
           
        x = 16'b0000000011001100;
        y = 16'b0000000001010110;
        color = 8'b00000001;
        #100
        if(pixel != color)
            $display("4Wert in Pixel Farbe: %d x: %d und y: %d ist ungleich Color:%d",color, x, y, color);
        write = 1'b0;   
        #100
                
        x = 16'b0000000000001100;
        y = 16'b0000000000000110;
        #100
        if(pixel != 8'b00001111)
            $display("5Wert in Pixel Farbe: %d x: %d und y: %d ist ungleich Color:%d",color, x, y, color);

        #100
        $display("End of simulation");
        $finish;
    end
 
endmodule
