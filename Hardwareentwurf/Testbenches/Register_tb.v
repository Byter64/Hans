// Code generated by Icestudio 0.10
// Sat, 18 Mar 2023 19:02:50 GMT

// Testbench template
`include "../Prozessor/Register.v"
`default_nettype none
`define DUMPSTR(x) `"x.vcd`"
`timescale 10 ns / 1 ns
`define assert(signal, value) \
        if (signal !== value) begin \
            $display("ASSERTION FAILED in %m: signal != value"); \
            $finish; \
        end

module main_tb
;
 
 // Simulation time: 100ns (10 * 10ns)
 parameter DURATION = 10;
 
 // Input/Output
 reg [5:0] QuellReg1;
 reg [5:0] QuellReg2;
 reg [5:0] ZielReg;
 reg Schreibsignal;
 reg [31:0] ZielDaten;
 reg Reset;
 wire [31:0] QuellDaten1;
 wire [31:0] QuellDaten2;
 
reg clock;
localparam Halfcycle = 5;
localparam Cycle = 2*Halfcycle;

 // Module instance
 Register MAIN (
  QuellReg1,
  QuellReg2,
  ZielDaten,
  ZielReg,
  Schreibsignal,
  clock,
  Reset,

  QuellDaten1,
  QuellDaten2
 );
 
initial begin
    clock = 1'b0;
end

always begin
   #(Halfcycle) clock = ~clock; 
end

 initial begin
  $dumpvars(0, main_tb);
 
  // TODO: initialize the registers here
  // e.g. value = 1;
  // e.g. #2 value = 0;
  QuellReg1 = 0;
  QuellReg2 = 0;
  ZielReg = 0;
  Schreibsignal = 0;
  ZielDaten = 0;

  //Reset testen
  Reset = 1'b1;
  #(Halfcycle)
  Reset = 1'b0;
  #(Halfcycle)

  //Speicher Daten in Int-register
  ZielReg = 6'b000100;
  ZielDaten = 32'b10101010101010101010101010101010;
  Schreibsignal = 1'b1;
  #(Cycle)
  Schreibsignal = 1'b0;

  //Lese Daten aus Int-register
  QuellReg1 = 6'b000100;
  #(Cycle)
  if(QuellDaten1 != 32'b10101010101010101010101010101010)
    $display("Deine Mamer ist fett. Und die gespeicherten Daten über QuellReg1 sind falsch ausgegeben. \n In R4 wurde 2863311530 gespeichert. \n Aus R4 wurd %d ausgegeben", QuellDaten1);
  
  //Speicher Daten in Float-register
  ZielReg = 6'b101100;
  ZielDaten = 32'b10101010101010101010101010101010;
  Schreibsignal = 1'b1;
  #(Cycle)
  Schreibsignal = 1'b0;

  //Lese Daten aus Float-register
  QuellReg2 = 6'b101100;
  #(Cycle)
  if(QuellDaten2 != 32'b10101010101010101010101010101010)
    $display("Deine Mamer ist fett. Und die gespeicherten Daten über QuellReg2 sind falsch ausgegeben. \n In R44 wurde 2863311530 gespeichert. \n Aus R44 wurd %d ausgegeben", QuellDaten2);
  
  //Lese 0 aus R0
  QuellReg2 = 6'b000000;
  #(Cycle)
  if(QuellDaten2 != 32'b00000000000000000000000000000000)
    $display("Deine Mamer ist fett... Und das Nullregister funktiontiert nicht. \n Aus R0 wurd %d ausgegeben anstatt 00000000000000000000000000000000", QuellDaten2);

  //Speichern in R0
  ZielReg = 6'b000000;
  ZielDaten = 32'b10101010101010101010101010101010;
  Schreibsignal = 1'b1;
  #(Cycle)
  Schreibsignal = 1'b0;

  //0 Lesen aus R0
  QuellReg2 = 6'b000000;
  #(Cycle)
  if(QuellDaten2 != 32'b00000000000000000000000000000000)
    $display("Deine Mamer ist fett... Und das Nullregister seinen Wert nach Beschreibung verändert. \n Aus R0 wurd %d ausgegeben anstatt 00000000000000000000000000000000", QuellDaten2);

  #(DURATION) $display("End of simulation");
  $finish;
 end
 
endmodule
